<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.tzy.demo.database.mapper.CoreUserMapper">
    <resultMap id="BaseResultMap" type="com.example.tzy.demo.database.entity.CoreUserEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="role_id" jdbcType="TINYINT" property="roleId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, username, nickname, email, mobile, `password`, role_id, created_time, update_time
    </sql>
    <sql id="Simple_List">
        <!--@mbg.generated-->
        id, username, nickname, role_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from core_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.example.tzy.demo.database.entity.CoreUserEntity" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into core_user (username, nickname, email,
        mobile, `password`, role_id
        <!--    ,created_time, update_time-->
        )
        values (#{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=TINYINT}
        <!--     , #{createdTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}-->
        )
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.tzy.demo.database.entity.CoreUserEntity">
        <!--@mbg.generated-->
        update core_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=TINYINT},
            </if>
            <!--      <if test="createdTime != null">-->
            <!--        created_time = #{createdTime,jdbcType=TIMESTAMP},-->
            <!--      </if>-->
            <!--      <if test="updateTime != null">-->
            <!--        update_time = #{updateTime,jdbcType=TIMESTAMP},-->
            <!--      </if>-->
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2020-09-22-->
    <select id="selectAllByNicknameContaining" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from core_user
        <where>
            <if test="containingNickname != null">
                and nickname like concat('%', #{containingNickname,jdbcType=VARCHAR}, '%')
            </if>
            <if test="roleId != null">
                and role_id = #{roleId,jdbcType=SMALLINT}
            </if>
            and is_del = 0
        </where>
    </select>

    <update id="softDel">
        update core_user
        set is_del=1
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
