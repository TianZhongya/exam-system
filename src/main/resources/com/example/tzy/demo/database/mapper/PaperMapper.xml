<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tzy.demo.database.mapper.PaperMapper">
  <resultMap id="BaseResultMap" type="com.example.tzy.demo.database.entity.PaperEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="subject_name" jdbcType="VARCHAR" property="subjectName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="context_json" jdbcType="VARCHAR" property="contextJson" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, subject_id, subject_name, title, teacher_id, teacher_name, score, duration, context_json, 
    is_del, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paper
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from paper
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.tzy.demo.database.entity.PaperEntity" useGeneratedKeys="true">
    insert into paper (subject_id, subject_name, title, 
      teacher_id, teacher_name, score, 
      duration, context_json, is_del, 
      created_time, updated_time)
    values (#{subjectId,jdbcType=INTEGER}, #{subjectName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=BIGINT}, #{teacherName,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{duration,jdbcType=INTEGER}, #{contextJson,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.tzy.demo.database.entity.PaperEntity" useGeneratedKeys="true">
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="subjectName != null">
        subject_name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="contextJson != null">
        context_json,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null">
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="contextJson != null">
        #{contextJson,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.tzy.demo.database.entity.PaperEntity">
    update paper
    <set>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null">
        subject_name = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="contextJson != null">
        context_json = #{contextJson,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.tzy.demo.database.entity.PaperEntity">
    update paper
    set subject_id = #{subjectId,jdbcType=INTEGER},
      subject_name = #{subjectName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=BIGINT},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      context_json = #{contextJson,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>