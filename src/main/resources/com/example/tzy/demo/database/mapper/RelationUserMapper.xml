<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.tzy.demo.database.mapper.RelationUserMapper">
    <sql id="Base_Column_List">
        student_id,
        id,
        course_id,
        user_name
    </sql>
    <resultMap id="BaseResultMap" type="com.example.tzy.demo.database.entity.RelationUserEntity">
        <id column="id" jdbcType="BIGINT" property="id"></id>
        <result column="course_id" jdbcType="BIGINT" property="courseId"></result>
        <result column="username" jdbcType="VARCHAR" property="username"></result>
    </resultMap>
    <resultMap id="StudentResultMap" type="com.example.tzy.demo.database.entity.RelationUserEntity" extends="BaseResultMap">
        <result column="student_id" jdbcType="BIGINT" property="userId"></result>
    </resultMap>
    <resultMap id="TeacherResultMap" type="com.example.tzy.demo.database.entity.RelationUserEntity"
               extends="BaseResultMap">
        <result column="teacher_id" jdbcType="BIGINT" property="userId"/>
    </resultMap>
    <sql id="Teacher_Column_List">
        teacher_id,user_name
    </sql>
    <sql id="Student_Column_List">
        student_id,user_name
    </sql>
    <select id="selectTeacherByCourseId" parameterType="java.lang.Long" resultMap="TeacherResultMap">
        select
        <include refid="Teacher_Column_List"/>
        from course_relation
        where course_id = #{id,jdbcType=BIGINT}
        and is_del = 0
    </select>
    <select id="selectStudentByCourseId" parameterType="java.lang.Long" resultMap="StudentResultMap">
        select
        <include refid="Student_Column_List"></include>
        from course_relation
        where course_id = #{id,jdbcType=BIGINT}
        and is_del = 0
    </select>
    <update id="deleteByCourseId" parameterType="java.lang.Long">
        update course_relation
        set is_del = 1
        where course_id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="batchInsertTeachers" keyColumn="id" keyProperty="list.id">
        insert ignore into course_relation
                (course_id,teacher_id,username)
                values
        <foreach collection="list" item="item" separator=",">
            (#{courseId,jdbcType=BIGINT},
            #{item.userId,jdbcType=BIGINT},
            (select nickname from core_user where id = #{item.userId,jdbcType=BIGINT}))
        </foreach>
        on duplicate key UPDATE is_del = 0
    </insert>
    <insert id="batchInsertStudents" keyColumn="id" keyProperty="list.id">
        insert ignore into course_relation
        (course_id, student_id, user_name)
        values
        <foreach collection="list" item="item" separator=",">
            (#{courseId,jdbcType=BIGINT},
            #{item.userId,jdbcType=BIGINT},
            (select nickname from core_user where id = #{item.userId,jdbcType=BIGINT}))
        </foreach>
        on duplicate key UPDATE is_del = 0
    </insert>

    <insert id="batchInsertTeacherByIds" keyColumn="id" keyProperty="list.id">
        <!--@mbg.generated-->
        insert ignore into course_relation
        (course_id, teacher_id, user_name)
        values
        <foreach collection="ids" item="id" separator=",">
            (#{courseId,jdbcType=BIGINT},
            #{id,jdbcType=BIGINT},
            (select nickname from core_user where id = #{id,jdbcType=BIGINT}))
        </foreach>
        on duplicate key UPDATE is_del = 0
    </insert>

    <insert id="insertStudentById">
        insert into course_relation
                (course_id, student_id, user_name)
        values (#{courseId,jdbcType=BIGINT},
                #{userId,jdbcType=BIGINT},
                (select nickname from core_user where id = #{userId,jdbcType=BIGINT}))
        on duplicate key UPDATE is_del = 0
    </insert>

    <update id="deleteStudentByCourseId">
        update course_relation
        set is_del = 1
        where course_id = #{courseId,jdbcType=BIGINT}
          and student_id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="deleteTeacherByCourseId">
        update course_relation
        set is_del =1
        where course_id = #{courseId,jdbcType=BIGINT}
        <!--for index-->
        and student_id = 0
        and teacher_id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="deleteAllTeachersByCourseId">
        update course_relation
        set is_del =1
        where course_id = #{courseId,jdbcType=BIGINT}
    </update>
</mapper>
